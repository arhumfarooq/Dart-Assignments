q1


void main() {
  List<String> names = ['Alice', 'Bob', 'Charlie', 'David'];
  for (String name in names) {
    print(name);
  }
}


q2



void main() {
  List<String> days = [];
  days.add('Monday');
  days.add('Tuesday');
  days.add('Wednesday');
  days.add('Thursday');
  days.add('Friday');
  days.add('Saturday');
  days.add('Sunday');
  
  for (String day in days) {
    print(day);
  }
}



q3


void main() {
  List<String> days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
  
  
 days.remove(days[6]);
  print(days);
  
   days.remove(days[5]);
  print(days);
  
   days.remove(days[4]);
  print(days);
  
   days.remove(days[3]);
  print(days);
  
   days.remove(days[2]);
  print(days);
  
  
   days.remove(days[1]);
  print(days);
  
  
   days.remove(days[0]);
  print(days);
}




q4


void main() {
  List<int> numbers = [10, 5, 8, 3, 15];
  int min = 1000;
  int max = 0;
  
  for (int number in numbers) {
    if (number < min) {
      min = number;
    }
    if (number > max) {
      max = number;
    }
  }
  
  print('Smallest number: $min');
  print('Greatest number: $max');
}



q5
void main() {
  Map<String, int> contacts = {
    'John': 1232,
    'Mikew': 987621,
    'Lisaww': 14455,
    'Paul': 58899
  };
  
  contacts.removeWhere((key, value) => key.length == 4);

  print(contacts);
}

q7
void main() {
  Map<String, double> expenses = {
    'sun': 3000.0,
    'mon': 3000.0,
    'tue': 3234.0,
  };


  expenses.putIfAbsent('fri', () => 5000.0);




  print(expenses);
}



q8

void main() {
  List<Map<String, dynamic>> usersEligibility = [
    {'name': 'John', 'eligible': true},
    {'name': 'Alice', 'eligible': false},
    {'name': 'Mike', 'eligible': true},
    {'name': 'Sarah', 'eligible': true},
    {'name': 'Tom', 'eligible': false},
  ];

  usersEligibility.removeWhere((user) => user['eligible'] == false);

  print(usersEligibility);
}


q9

void main() {
  List<int> numbers = [10, 5, 8, 15, 3];

  int max = numbers[0];
  for (int number in numbers) {
    if (number > max) {
      max = number;
    }
  }

  print(max);
}


q10

void main() {
  List<String> strings = ['apple', 'banana', 'apple', 'orange', 'banana'];
  
  Set<String> uniqueSet = Set<String>.from(strings);
  List<String> uniqueList = uniqueSet.toList();
  
  print(uniqueList);
}



q11


void main() {
  List<int> numbers = [10, 20, 30, 40, 50];
  int n = 3;
  
  List<int> firstNElements = numbers.sublist(0,n);
  
  print(firstNElements);
}

q12
void main() {
  List<String> strings = ['apple', 'banana', 'orange'];
  
  List<String> reversedList = [];
  
  for (int i = strings.length - 1; i >= 0; i--) {
    reversedList.add(strings[i]);
  }
  
  print(reversedList);
}






q13

void main() {
  List<int> numbers = [1, 2, 2, 3, 4, 4, 5];
  
  List<int> uniqueList = [];
  Set<int> seen = Set<int>();

  for (int number in numbers) {
    if (!seen.contains(number)) {
      seen.add(number);
      uniqueList.add(number);
    }
  }

  print(uniqueList);
}


q14

void main() {
  List<int> numbers = [5, 3, 8, 1, 4];
  
  List<int> sortedList = List<int>.from(numbers)..sort();
  
  print(sortedList);
}


q15
void main() {
  List<int> numbers = [10, -5, 20, -3, 15];
  
  List<int> positiveNumbers = numbers.where((number) => number >= 0).toList();
  
  print(positiveNumbers);
}

q16

void main() {
  List<int> numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];
  
  List<int> evenNumbers = numbers.where((number) => number % 2 == 0).toList();
  
  print(evenNumbers);
}


q17

void main() {
  List<int> numbers = [1, 2, 3, 4, 5];
  
  List<int> squaredNumbers = numbers.map((number) => number * number).toList();
  
  print(squaredNumbers);
}


q18

void main() {
  Map<String, dynamic> person = {
    'name': 'John',
    'age': 25,
    'isStudent': true
  };

  if (person['age'] > 18 && person['isStudent']) {
    print('Eligible');
  } else {
    print('Not eligible');
  }
}


q19

void main() {
  Map<String, dynamic> product = {
    'name': 'Laptop',
    'price': 999.99,
    'quantity': 5
  };

  if (product['quantity'] > 0) {
    print('In stock');
  } else {
    print('Out of stock');
  }
}


q20

void main() {
  Map<String, dynamic> car = {
    'brand': 'Toyota',
    'color': 'Red',
    'isSedan': true
  };

  if (car['isSedan'] && car['color'] == 'Red') {
    print('Match');
  } else {
    print('No match');
  }
}



q21

import 'dart:developer';

void main() {
  Map<String, dynamic> names1 = {
    'name': 'arhum',
    'isadmin': 'ncc1',
    'isactive': 'ncc1'
  };

  if (names1['isadmin'] == 'ncc1' && names1['isactive'] == 'ncc1') {
    print('active admin');
  } else {
    print('not an active admin');
  }
}


q22


void main() {
  Map shoppingcart = {'apple': 2, 'banana': 3, 'orange': 4};
  if (shoppingcart.containsKey('apple')) {
    print('product found');
  } else {
    print('not found');
  }
}

q23

void main() {
  print("the first ten natural numbers are");
  for (int i = 1; i <= 10; i++) {
    print(i);
  }
}


q24
void main() {
  print('the sqaure of numbers are');
  List<int> num = [1, 2, 3, 4, 5];
  int i = 0;

  do {
    print(num[i] * num[i]);
    i++;
  } while (i < num.length);
}



q25

void main() {
  List<int> num = [1, 2, 3, 4];
  int i = 0;
  int count = 0;
  int sum = 0;
  do {
    sum = sum + num[i];
    count++;
    i++;
  } while (i < num.length);

  double avg;
  if (count > 0) {
    avg = sum / count;
  } else {
    avg = 0;
    print('np');
  }

  print('the sum of numbers is $sum');
  print('the avg of number is $avg');
}



q26


void main() {
  int num = 1245;
  int num2 = 0;

  do {
    int digit = num % 10;
    if (digit > num2) {
      num2 = digit;
    }
    num ~/= 10;
  } while (num > 0);

  print("the largest digit is $num2");
}



q27

void main() {
  int num = 1; 
  do {
    if (num % 2 == 0) {

      print(num); 
    }
    num++;
  } while (num <= 20);
}


q28


void main() {
  marksheet('arhum', 50);
}
//marksheet(arhum , 24) ;

marksheet(String name, int percentage) {
  if (percentage >= 40) {
    print('pass');
  } else {
    print('fail');
  }
}